#!/bin/bash

DATE_FORMAT="--rfc-3339=seconds";

Suite=jCafe;

file-time() {
  echo [source-checkpoint: $(date $DATE_FORMAT -r $1)];
}

now-time() {
  date "$DATE_FORMAT";
}
fixName.killDotDir() {
  echo ${1##*.}
}

fixName.swapDots() {
  echo ${1//\//.}
}

fixName.swapLibrary() {
  echo ${1/library/${Suite}}
}

fixName.killExtension() {
  echo ${1%.js}
}

fixName() {
  fixName.swapDots $(fixName.swapLibrary `fixName.killExtension ${1#./}`)
}

function trim {
awk '{a[NR]=$0;if($0 && !s)s=NR;}
    END{e=NR;
        for(i=NR;i>1;i--) 
            if(a[i]){ e=i; break; } 
        for(i=s;i<=e;i++)
            print a[i];}' /dev/stdin
}

while [[ ${1:0:2} == -- ]]; do

  if [[ ${1} == --suite ]]; then
    Suite="$2";
    shift 2; continue;
  fi;
  
  if [[ ${1} == --port ]]; then
    [[ "$2" =~ \:$ ]] || {
      echo invalid arguments expected /path/to/module: module.path, new.module.path
      exit 1;
    } >&2;
    port="${3}" root="${2/:/}";
    shift 3;
    continue;
  fi;

  echo "Sorry, i don't know what $1 means" >&2;
  exit 1;

done;

now=$(now-time);
stamp=$(date +%s);
echo
if [[ -n "$port" ]]; then
  echo // jCafe Module Porter: port-date: $now
else
  echo // jCafe Module Builder: build-date: $now
fi
echo

echo var jCafeBuildDate = $stamp\; // \(${#@} units included\)

for arg; do
  echo
  if [[ -n "$port" ]]; then
    echo // Unit: Port: `fixName $arg` $(file-time $arg)
  else
    echo // Unit: `fixName $arg` $(file-time $arg)
  fi
  cat $arg | trim
done | {
  if [[ -n "$port" ]]; then
    sed s/[^.]$root./$port./g;
  else
    cat
  fi;
}
echo
echo // Enjoy: jCafe Custom Blend
echo
